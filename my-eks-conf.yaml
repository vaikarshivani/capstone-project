---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: ShivaniCapstone # name of cluster
  region: us-east-1
  version: "1.23" # kubernetes version
vpc: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/04-existing-vpc.yaml
  id: "vpc-0ea81f3a1d1704ba6"
  subnets:
    public:
      upgrad-public-1:
        id: "subnet-003f96ce7ce2e288e"
        az: "us-east-1a"
      upgrad-public-2:
        id: "subnet-079c7bda93531215b"
        az: "us-east-1b"
    private:
      upgrad-private-1:
        id: "subnet-0a6e886b225454858 " 
        az: "us-east-1a"
      upgrad-private-2:
        id: "subnet-0d300d4183d8998b7"
        az: "us-east-1b"
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  nat:
    gateway: Disable # disable since already created

iam: # Refer: https://eksctl.io/usage/iamserviceaccounts/
  withOIDC: true
  serviceAccounts: # pre-including some common iamserviceaccounts
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true

nodeGroups: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/05-advanced-nodegroups.yaml
  - name: Node-G1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. Refer: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
      k8s.io/cluster-autoscaler/my-eks-201: "shared" # cluster name tag is optional in latest versions of EKS
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    privateNetworking: true # include only in private subnet
    subnets:
      - upgrad-private-1 # 1 AZ is enough for testing
  - name: Node-G2
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks-201: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 2
    minSize: 2
    maxSize: 2
    subnets:
      - upgrad-public-1

  - name: Node-G3
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. Refer: https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md#auto-discovery-setup
      k8s.io/cluster-autoscaler/my-eks-201: "shared" # cluster name tag is optional in latest versions of EKS
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 5
    taints:
      - key: special
        value: "true"
        effect: Equal
    privateNetworking: true # include only in private subnet
    subnets:
      - upgrad-private-1 # 1 AZ is enough for testing
